/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */


import java.awt.Color;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.HashSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 * @author Michael Sanchez
 */

//Variable definitions
public class CustomerChangeGui extends javax.swing.JFrame {
    private Customer customer;
    private String customerData;
    private Membership mem;
    private File file;
    private HashSet<Customer> members;

    /**
     * Creates new form CustomerChangeGui
     */
    public CustomerChangeGui() {
        initComponents();
    }
    
    //Initializes variables
    public CustomerChangeGui(Customer customer, Membership mem, HashSet<Customer> members) {
        this.customer = customer;
        this.customerData = "Customers.csv";
        this.mem = mem;
        this.members = members;
        File file = new File(customerData);
        initComponents();
        tblCustomers.getColumnModel().getColumn(4).setPreferredWidth(8);
        btnUpdate.setEnabled(false);
        getContentPane().setBackground(Color.DARK_GRAY);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlCustomer = new javax.swing.JPanel();
        lblFirstName = new javax.swing.JLabel();
        tfFirstName = new javax.swing.JTextField();
        lblLastName = new javax.swing.JLabel();
        tfLastName = new javax.swing.JTextField();
        lblBirthdate = new javax.swing.JLabel();
        tfBirthdate = new javax.swing.JTextField();
        lblPhoneNumber = new javax.swing.JLabel();
        tfPhoneNumber = new javax.swing.JTextField();
        lblPoints = new javax.swing.JLabel();
        tfPoints = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        lblPassword = new javax.swing.JLabel();
        tfPassword = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCustomers = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        pnlCustomer.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Customer Information", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 0, 13), new java.awt.Color(255, 255, 255))); // NOI18N
        pnlCustomer.setOpaque(false);

        lblFirstName.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lblFirstName.setForeground(new java.awt.Color(255, 255, 255));
        lblFirstName.setText("First Name");

        lblLastName.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lblLastName.setForeground(new java.awt.Color(255, 255, 255));
        lblLastName.setText("Last Name");

        lblBirthdate.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lblBirthdate.setForeground(new java.awt.Color(255, 255, 255));
        lblBirthdate.setText("Birthdate");

        lblPhoneNumber.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lblPhoneNumber.setForeground(new java.awt.Color(255, 255, 255));
        lblPhoneNumber.setText("Phone Number");

        lblPoints.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lblPoints.setForeground(new java.awt.Color(255, 255, 255));
        lblPoints.setText("Points");

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        lblPassword.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lblPassword.setForeground(new java.awt.Color(255, 255, 255));
        lblPassword.setText("Password");

        javax.swing.GroupLayout pnlCustomerLayout = new javax.swing.GroupLayout(pnlCustomer);
        pnlCustomer.setLayout(pnlCustomerLayout);
        pnlCustomerLayout.setHorizontalGroup(
            pnlCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCustomerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfFirstName)
                    .addComponent(tfLastName)
                    .addComponent(tfBirthdate)
                    .addComponent(tfPhoneNumber)
                    .addComponent(tfPoints)
                    .addComponent(tfPassword)
                    .addGroup(pnlCustomerLayout.createSequentialGroup()
                        .addGroup(pnlCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblBirthdate, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPoints, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlCustomerLayout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addGroup(pnlCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnUpdate)
                                    .addGroup(pnlCustomerLayout.createSequentialGroup()
                                        .addComponent(btnAdd)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnClear))
                                    .addComponent(btnDelete)))
                            .addComponent(lblPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 61, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlCustomerLayout.setVerticalGroup(
            pnlCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCustomerLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(lblFirstName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblLastName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblBirthdate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfBirthdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblPhoneNumber)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblPoints)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfPoints, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(lblPassword)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnlCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnClear))
                .addGap(18, 18, 18)
                .addComponent(btnUpdate)
                .addGap(18, 18, 18)
                .addComponent(btnDelete)
                .addContainerGap())
        );

        tblCustomers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "FIrst Name", "Last Name", "Birthdate", "Phone Number", "Points", "Password"
            }
        ));
        tblCustomers.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        tblCustomers.setOpaque(false);
        tblCustomers.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCustomersMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblCustomers);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 574, Short.MAX_VALUE)
                .addGap(22, 22, 22))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jScrollPane1))
                    .addComponent(pnlCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(894, 664));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        /**
         * Once this window is opened, rows are read from the file Customers.csv and 
         * assigned to an array of strings and displayed in the table as rows.
         */
        try {
            BufferedReader reader = new BufferedReader(new FileReader(customerData));
            ArrayList<String> tableData = new ArrayList<>();
            String line;
            
            while ((line = reader.readLine()) != null) {
                tableData.add(line);
            }
            reader.close();
            
            DefaultTableModel model = (DefaultTableModel) tblCustomers.getModel();
            for (String rowInfo : tableData) {
                String[] row = rowInfo.split(",");
                
                Customer customer = new Customer(row[0], row[1], row[2], Long.parseLong(row[3]), row[4]);
                
                mem.addMembers(customer);
                
                model.addRow(row);
            }
            
            //JOptionPane.showMessageDialog(this, "Data loaded.");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_formWindowOpened

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        /**
         * Method that takes all rows in table and assigns them into a string array
         * then saves them in Customers.csv.
         */
        DefaultTableModel model = (DefaultTableModel)tblCustomers.getModel();
        
        ArrayList<String> tableData = new ArrayList<>();
        
        for(Customer c: mem.getMembers()) {
            String fname = c.getFirstName();
            String lname = c.getLastName();
            String dob = c.getdob();
            long pNum = c.getMemberID();
            double points = c.getPoints();
            String pass = c.getPassword();
            String row = fname + "," + lname + "," + dob + "," + pNum + "," + points + "," + pass;
            tableData.add(row);
            System.out.println(row);
        }
        
        try {
            PrintWriter writer = new PrintWriter(new FileWriter(customerData));
            for (String rowData : tableData) {
                writer.println(rowData);
            }
            writer.close();
            JOptionPane.showMessageDialog(this, "Data saved.");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_formWindowClosing

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        //Calls the clear method when button is pushed and enables the add button while disabling the update button.
        clear();
        btnAdd.setEnabled(true);
        btnUpdate.setEnabled(false);
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        /**
         * Method once button is pressed that takes the current row
         * finds the customer with the same phone number and removes that customer
         * object from the members list. 
         */
        int row = tblCustomers.getSelectedRow();
        Customer cust = new Customer();
        DefaultTableModel model = (DefaultTableModel)tblCustomers.getModel();
        
        String name = model.getValueAt(row, 3).toString();
        for (Customer c: members) {
            if (Long.toString(c.getMemberID()).equals(name)) {
                cust = c;
            }
        }
        mem.removeMembers(cust);
        model.removeRow(row);
        JOptionPane.showMessageDialog(this, "Customer removed.");
        clear();
        btnAdd.setEnabled(false);
        btnUpdate.setEnabled(false);
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        /**
         * Gets selected row and assigns the text from the fields to customer
         * object values.  Then updates that specific row.
         */
        int row = tblCustomers.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel)tblCustomers.getModel();
        Customer cust = new Customer();
        String name = model.getValueAt(row, 0).toString();
        for (Customer c: members) {
            if (c.getFirstName().equals(name)) {
                cust = c;
            }
        }
        cust.setFirstName(tfFirstName.getText());
        cust.setLastName(tfLastName.getText());
        cust.setDOB(tfBirthdate.getText());
        cust.setMemberID(Long.parseLong(tfPhoneNumber.getText()));
        cust.setPoints(Double.parseDouble(tfPoints.getText()));
        cust.setPassword(tfPassword.getText());
        
        updateTableInfo(model, row, cust);
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void tblCustomersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCustomersMouseClicked
        /**
         * Once the table is clicked, this will assign all fields on frame
         * with the values for each Customer object field.
         */
        int row = tblCustomers.getSelectedRow();
        Customer cust = new Customer();
        DefaultTableModel model = (DefaultTableModel)tblCustomers.getModel();
        
        String name = model.getValueAt(row, 0).toString();
        for (Customer c: members) {
            if (c.getFirstName().equals(name)) {
                cust = c;
            }
        }
        tfFirstName.setText(cust.getFirstName());
        tfLastName.setText(cust.getLastName());
        tfBirthdate.setText(cust.getdob());
        tfPhoneNumber.setText(Long.toString(cust.getMemberID()));
        tfPoints.setText(Double.toString(cust.getPoints()));
        tfPassword.setText(cust.getPassword());
        
        btnUpdate.setEnabled(true);
        btnAdd.setEnabled(false);
    }//GEN-LAST:event_tblCustomersMouseClicked

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        /**
         * Method that takes all the fields text inputs and assigns them to 
         * a new customer object's values.  Then assigns the values to a 
         * String array where that array can be added to the table as a row,
         * and the customer object can be added to the members list.
         */
        int row = tblCustomers.getSelectedRow();
        ArrayList<String> tableData = new ArrayList<>();
        DefaultTableModel model = (DefaultTableModel)tblCustomers.getModel();
        Customer cust = new Customer();
        cust.setFirstName(tfFirstName.getText());
        cust.setLastName(tfLastName.getText());
        cust.setDOB(tfBirthdate.getText());
        cust.setMemberID(Long.parseLong(tfPhoneNumber.getText()));
        cust.setPoints(Double.parseDouble(tfPoints.getText()));
        cust.setPassword(tfPassword.getText());
        mem.addMembers(cust);
        String fname = cust.getFirstName();
        String lname = cust.getLastName();
        String dob = cust.getdob();
        long pNum = cust.getMemberID();
        double points = cust.getPoints();
        String pass = cust.getPassword();
        String newRow = fname + "," + lname + "," + dob + "," + pNum + "," + points + "," + pass;
        tableData.add(newRow);
        String[]rows = newRow.split(",");
        model.addRow(rows);
        clear();
        btnAdd.setEnabled(false);
        btnUpdate.setEnabled(false);
        
    }//GEN-LAST:event_btnAddActionPerformed
    //Updates the table information with the assigned values for cust
    private void updateTableInfo(DefaultTableModel theModel, int row, Customer cust) {
        DefaultTableModel model = theModel;
        model.setValueAt(cust.getFirstName(), row, 0);
        model.setValueAt(cust.getLastName(), row, 1);
        model.setValueAt(cust.getdob(), row, 2);
        model.setValueAt(cust.getMemberID(), row, 3);
        model.setValueAt(cust.getPoints(), row, 4);
        model.setValueAt(cust.getPassword(), row, 5);
    }
    
    //Clears all the text fiedls on the frame.
    private void clear() {
        tfFirstName.setText("");
        tfLastName.setText("");
        tfBirthdate.setText("");
        tfPhoneNumber.setText("");
        tfPoints.setText("");
        tfPassword.setText("");
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CustomerChangeGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CustomerChangeGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CustomerChangeGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CustomerChangeGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CustomerChangeGui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblBirthdate;
    private javax.swing.JLabel lblFirstName;
    private javax.swing.JLabel lblLastName;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblPhoneNumber;
    private javax.swing.JLabel lblPoints;
    private javax.swing.JPanel pnlCustomer;
    private javax.swing.JTable tblCustomers;
    private javax.swing.JTextField tfBirthdate;
    private javax.swing.JTextField tfFirstName;
    private javax.swing.JTextField tfLastName;
    private javax.swing.JTextField tfPassword;
    private javax.swing.JTextField tfPhoneNumber;
    private javax.swing.JTextField tfPoints;
    // End of variables declaration//GEN-END:variables
}
